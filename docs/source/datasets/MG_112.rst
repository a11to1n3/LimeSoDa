MG.112 Dataset
=============

Description
-----------
* Target Soil Properties: SOC, pH, Clay
* Groups of Features: DEM, ERa, RSS, VI
* Sample size: 112
* Number of Features: 17
* Coordinates: With coordinates (EPSG: 32721)
* Location: Mato Grosso, Brazil
* Sampling Design: Regular grid sampling
* Study Area Size: 111 ha
* Geological Setting: Unknown
* Previous Data Publication: None
* Contact Information:
    * Domingos Sarvio Magalhaes Valente (valente@ufv.br), Federal University of Vicosa
    * Rodrigo Sinaidi Zandonadi (rodrigo.zandonadi@ufmt.br), Federal University of Mato Grosso
* License: CC BY-SA 4.0
* Publication/Modification Date (d/m/y): XXX.03.2025, version 1.0
* Changelog:
    * Version 1.0 (XXX.03.2025): Initial release

Details
-------

Dataset
^^^^^^^
The dataset contains the following target soil properties and features:

Target Soil Properties:
""""""""""""""""""""""

SOC - Soil Organic Carbon
    * Code: ``SOC_target``
    * Unit: %
    * Protocol: Measured through titration after oxidization of the organic carbon (Walkley & Black 1934)
    * Sampling Date: March 2022
    * Sampling Depth: 0 – 20 cm

pH
    * Code: ``pH_target``
    * Unit: Unitless
    * Protocol: Measured in water suspension with a glass electrode with a 2.5:1 liquid:soil volumetric ratio
    * Sampling Date: March 2022
    * Sampling Depth: 0 – 20 cm

Clay
    * Code: ``Clay_target``
    * Unit: %
    * Protocol: Sieve-Pipette method, measured through fractioning the soil into the sand fractions by sieving, and the silt and clay fractions by sedimentation in water (Gee and Bauder 1986)
    * Sampling Date: March 2022
    * Sampling Depth: 0 – 20 cm

Groups of Features:
"""""""""""""""""

DEM – Digital Elevation Model and Terrain Parameters
    * Number of Features: 2
    * Code(s): ``Altitude``, ``Slope``
    * Unit: ``Altitude`` in m, ``Slope`` in °
    * Sensing: Digital elevation model raster (30 m) based on synthetic aperture radar from "Copernicus Open Access Hub"
    * Processing: Calculating ``Slope`` with ``terrain`` function of the raster R-package, extracting DEM values from raster at soil sampling locations
    * Sampling Date: April 2011

ERa – Apparent Electrical Resistivity
    * Number of Features: 1
    * Code(s): ``ERa``
    * Unit: Ω m
    * Sensing: Electrical conductivity disc array (VERIS Technologies, Salinas, USA) on Veris U3 platform with exploration depth of 0 - 30 cm, in-situ
    * Processing: Average of five adjacent ERa measurements around the soil sampling locations to align sensing- with soil sampling locations
    * Sampling Date: March 2022

RSS – Remote Sensing Derived Spectral Data
    * Number of Features: 12
    * Code(s): ``B01``, ``B02``, ``B03``, ``B04``, ``B05``, ``B06``, ``B07``, ``B08``, ``B8A``, ``B09``, ``B11``, ``B12``
    * Unit: Unitless
    * Sensing: Sentinel-2 bare soil image (Level-2A) from "Copernicus Open Access Hub"
    * Processing: Extracting RSS values from raster at soil sampling locations
    * Sampling Date: October 2022

VI - Vegetation Indices
    * Number of Features: 2
    * Code(s): ``NDVI``, ``GNDVI``
    * Unit: Unitless
    * Sensing: Sentinel-2 image during vegetative period (Level-2A) from "Copernicus Open Access Hub"
    * Processing: Calculating ``NDVI`` as (B08 - B04) / (B08 + B04) and ``GNDVI`` as (B08 - B03) / (B08 + B03), extracting VI values from raster at soil sampling locations
    * Sampling Date: May 2022

Examples
--------

.. code-block:: python

    from LimeSoDa import load_dataset, split_dataset
    from sklearn.linear_model import LinearRegression
    from sklearn.metrics import r2_score, mean_squared_error
    import numpy as np

    # Load and explore the dataset
    data = load_dataset("MG.112")
    dataset = data["Dataset"]
    folds = data["Folds"]
    coords = data["Coordinates"]

    # Split into train/test using fold 1
    X_train, X_test, y_train, y_test = split_dataset(
        data=data,
        fold=1,
        targets=["pH_target", "SOC_target", "Clay_target"]
    )

    # Fit model and get predictions
    model = LinearRegression()
    model.fit(X_train, y_train)
    predictions = model.predict(X_test)

    # Calculate performance metrics
    r2 = r2_score(y_test, predictions)
    rmse = np.sqrt(mean_squared_error(y_test, predictions))
    print(f"R-squared: {r2:.7f}")
    print(f"RMSE: {rmse:.7f}")

References
----------

Gee, G.W. & Bauder, J.W. (1986) Particle-Size Analysis. In: Klute, A., Ed., Methods of Soil Analysis, Part 1. Physical and Mineralogical Methods, Agronomy Monograph No. 9, 2nd Edition, American Society of Agronomy/Soil Science Society of America, Madison, WI, 383-411.

Walkley, A. & Black, I. A. (1934). An examination of the Degtjareff method for determining soil organic matter, and a proposed modification of the chromic acid titration method. Soil science, 37(1), 29-38.
